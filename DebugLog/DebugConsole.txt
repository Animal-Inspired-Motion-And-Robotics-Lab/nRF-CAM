Debug Console:
Cortex-Debug: VSCode debugger extension version 1.12.1 git(652d042). Usage info: https://github.com/Marus/cortex-debug#usage
"configuration": {
    "name": "Debug nRF5340 Application Core",
    "type": "cortex-debug",
    "request": "launch",
    "servertype": "jlink",
    "serverpath": "C:/Program Files/SEGGER/JLink_V832/JLinkGDBServerCL.exe",
    "device": "nRF5340_xxAA_APP",
    "interface": "swd",
    "cwd": "D:\\Arvind\\nRF5340\\blinky",
    "executable": "D:/Arvind/nRF5340/blinky/build/blinky/zephyr/zephyr.elf",
    "svdFile": "D:\\Arvind\\nRF5340\\blinky\\${nrfConnectSdkPath}\\modules\\hal\\nordic\\nrfx\\mdk\\nrf5340.svd",
    "gdbPath": "C:/Program Files (x86)/GNU Arm Embedded Toolchain/10 2021.10/bin/arm-none-eabi-gdb.exe",
    "armToolchainPath": "C:/Program Files (x86)/GNU Arm Embedded Toolchain/10 2021.10/bin",
    "showDevDebugOutput": "raw",
    "__configurationTarget": 6,
    "gdbServerConsolePort": 55878,
    "pvtAvoidPorts": [],
    "chainedConfigurations": {
        "enabled": false
    },
    "debuggerArgs": [],
    "swoConfig": {
        "enabled": false,
        "decoders": [],
        "cpuFrequency": 0,
        "swoFrequency": 0,
        "source": "probe"
    },
    "rttConfig": {
        "enabled": false,
        "decoders": []
    },
    "graphConfig": [],
    "preLaunchCommands": [],
    "postLaunchCommands": [],
    "preAttachCommands": [],
    "postAttachCommands": [],
    "preRestartCommands": [],
    "postRestartCommands": [],
    "preResetCommands": [],
    "postResetCommands": [],
    "toolchainPath": "C:/Program Files (x86)/GNU Arm Embedded Toolchain/10 2021.10/bin",
    "toolchainPrefix": "arm-none-eabi",
    "extensionPath": "c:/Users/aimrl/.vscode/extensions/marus25.cortex-debug-1.12.1",
    "registerUseNaturalFormat": true,
    "variableUseNaturalFormat": true,
    "pvtVersion": "1.12.1",
    "__sessionId": "e0835b47-ba35-4c48-b123-83cfa5d8aa40",
    "pvtShowDevDebugOutput": "raw"
}
Reading symbols from C:/Program Files (x86)/GNU Arm Embedded Toolchain/10 2021.10/bin/arm-none-eabi-objdump.exe --syms -C -h -w D:/Arvind/nRF5340/blinky/build/blinky/zephyr/zephyr.elf
Reading symbols from c:/program files (x86)/gnu arm embedded toolchain/10 2021.10/bin/arm-none-eabi-nm.exe --defined-only -S -l -C -p D:/Arvind/nRF5340/blinky/build/blinky/zephyr/zephyr.elf
Launching GDB: "C:/Program Files (x86)/GNU Arm Embedded Toolchain/10 2021.10/bin/arm-none-eabi-gdb.exe" -q --interpreter=mi2
1-gdb-version
Launching gdb-server: "C:/Program Files/SEGGER/JLink_V832/JLinkGDBServerCL.exe" -singlerun -nogui -if swd -port 50000 -swoport 50001 -telnetport 50002 -device nRF5340_xxAA_APP
    Please check TERMINAL tab (gdb-server) for output from C:/Program Files/SEGGER/JLink_V832/JLinkGDBServerCL.exe
Finished reading symbols from objdump: Time: 102 ms
-> =thread-group-added,id="i1"
-> ~"GNU gdb (GNU Arm Embedded Toolchain 10.3-2021.10) 10.2.90.20210621-git\n"
-> ~"Copyright (C) 2021 Free Software Foundation, Inc.\n"
-> ~"License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law."
-> ~"\nType \"show copying\" and \"show warranty\" for details.\n"
-> ~"This GDB was configured as \"--host=i686-w64-mingw32 --target=arm-none-eabi\".\n"
-> ~"Type \"show configuration\" for configuration details.\n"
-> ~"For bug reporting instructions, please see:\n"
-> ~"<https://www.gnu.org/software/gdb/bugs/>.\n"
-> ~"Find the GDB manual and other documentation resources online at:\n    <http://www.gnu.org/software/gdb/documentation/>."
-> ~"\n\n"
-> ~"For help, type \"help\".\n"
-> ~"Type \"apropos word\" to search for commands related to \"word\".\n"
-> 1^done
2-gdb-set mi-async on
Finished reading symbols from nm: Time: 115 ms
-> 2^done
3-interpreter-exec console "set print demangle on"
-> 3^done
4-interpreter-exec console "set print asm-demangle on"
-> =cmd-param-changed,param="print asm-demangle",value="on"
-> 4^done
5-enable-pretty-printing
-> 5^done
6-interpreter-exec console "source c:/Users/aimrl/.vscode/extensions/marus25.cortex-debug-1.12.1/support/gdbsupport.init"
-> 6^done
7-interpreter-exec console "source c:/Users/aimrl/.vscode/extensions/marus25.cortex-debug-1.12.1/support/gdb-swo.init"
-> =cmd-param-changed,param="language",value="c"
-> =cmd-param-changed,param="language",value="auto"
-> 7^done
8-interpreter-exec console "set output-radix 0xa"
-> ~"Output radix now set to decimal 10, hex a, octal 12.\n"
Output radix now set to decimal 10, hex a, octal 12.
-> 8^done
9-interpreter-exec console "set input-radix 0xa"
-> ~"Input radix now set to decimal 10, hex a, octal 12.\n"
Input radix now set to decimal 10, hex a, octal 12.
-> 9^done
10-file-exec-and-symbols "D:/Arvind/nRF5340/blinky/build/blinky/zephyr/zephyr.elf"
-> 10^done
11-target-select extended-remote localhost:50000
-> =thread-group-started,id="i1",pid="42000"
-> =thread-created,id="1",group-id="i1"
-> ~"0xeffffffe in ?? ()\n"
0xeffffffe in ?? ()
-> *stopped,frame={addr="0xeffffffe",func="??",args=[],arch="armv8-m.main"},thread-id="1",stopped-threads="all"
mi2.status = stopped
Program stopped, probably due to a reset and/or halt issued by debugger
-> 11^connected
12-interpreter-exec console "monitor halt"
-> 12^done
13-interpreter-exec console "monitor reset"
-> @"Resetting target\r\n"
Resetting target
-> 13^done
14-target-download
-> 14+download,{section="rom_start",section-size="340",total-size="771190"}
-> 14+download,{section="rom_start",section-sent="340",section-size="340",total-sent="340",total-size="771190"}
-> 14+download,{section="text",section-size="25228",total-size="771190"}
-> 14+download,{section=".ARM.exidx",section-size="8",total-size="771190"}
-> 14+download,{section="initlevel",section-size="104",total-size="771190"}
-> 14+download,{section="device_area",section-size="80",total-size="771190"}
-> 14+download,{section="sw_isr_table",section-size="552",total-size="771190"}
-> 14+download,{section="gpio_driver_api_area",section-size="36",total-size="771190"}
-> 14+download,{section="clock_control_driver_api_area",section-size="28",total-size="771190"}
-> 14+download,{section="uart_driver_api_area",section-size="12",total-size="771190"}
-> 14+download,{section="rodata",section-size="516",total-size="771190"}
-> 14+download,{section="datas",section-size="188",total-size="771190"}
-> 14+download,{section="device_states",section-size="8",total-size="771190"}
-> 14+download,{section="k_mutex_area",section-size="20",total-size="771190"}
-> 14+download,{section=".last_section",section-size="4",total-size="771190"}
-> 14^done,address="0x000109f8",load-size="27124",transfer-rate="54248000",write-rate="1808"
15-interpreter-exec console "monitor reset"
-> @"Resetting target\r\n"
Resetting target
-> 15^done
16-break-insert "d:\\Arvind\\nRF5340\\blinky\\src\\main.c:30"
-> 16^done,bkpt={number="1",type="breakpoint",disp="keep",enabled="y",addr="0x00010432",func="main",file="D:/Arvind/nRF5340/blinky/src/main.c",fullname="D:\\Arvind\\nRF5340\\blinky\\src\\main.c",line="30",thread-groups=["i1"],times="0",original-location="d:\\Arvind\\nRF5340\\blinky\\src\\main.c:30"}
Returning dummy thread-id to workaround VSCode issue with pause button not working
Returning dummy stack frame to workaround VSCode issue with pause button not working: {"threadId":1,"startFrame":0,"levels":20}
17-exec-continue --all
-> 17^running
-> *running,thread-id="all"
mi2.status = running
-> ~"\nProgram"

Program
-> ~" received signal SIGTRAP, Trace/breakpoint trap.\n"
 received signal SIGTRAP, Trace/breakpoint trap.
-> ~"0xeffffffe in ?? ()\n"
0xeffffffe in ?? ()
-> *stopped,reason="signal-received",signal-name="SIGTRAP",signal-meaning="Trace/breakpoint trap",frame={addr="0xeffffffe",func="??",args=[],arch="armv8-m.main"},thread-id="1",stopped-threads="all"
mi2.status = stopped
18-thread-list-ids
-> 18^done,thread-ids={thread-id="1"},current-thread-id="1",number-of-threads="1"
19-thread-info 1
-> 19^done,threads=[{id="1",target-id="Thread 57005",frame={level="0",addr="0xeffffffe",func="??",args=[],arch="armv8-m.main"},state="stopped"}]
20-stack-list-frames --thread 1 0 19
-> 20^done,stack=[frame={level="0",addr="0xeffffffe",func="??",arch="armv8-m.main"},frame={level="1",addr="0xfffffff9",func="<signal handler called>"}]